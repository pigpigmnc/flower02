<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace表示命名空间 -->
<mapper namespace="com.zsc.flower.dao.OrderDao">
    <insert id="selectAddOrder" parameterType="model.entity.Orders">
        insert into orders (orderCode,address,post,receiver,mobile,
        userMessage,createDate,payDate,deliveryDate,confirmDate,uid,status)
        values (#{orderCode},#{address},#{post},#{receiver},#{mobile},
        #{userMessage},#{createDate},#{payDate},#{deliveryDate},#{confirmDate},#{uid},#{status})
    </insert>

    <insert id="selectAddOrderItem" parameterType="model.entity.OrderItem">
        insert into orderitem (pid,oid,uid,number,simplePrice,totalPrice)
        values (#{pid},#{oid},#{uid},#{number},#{simplePrice},#{totalPrice})
    </insert>

    <select id="selectNewOrderId" resultType="Long">
        select id from orders order by createDate desc limit 0,1
    </select>

    <select id="selectOrderPrice" parameterType="Long" resultType="Float">
        select sum(totalPrice) from orderitem where oid =#{oid}
    </select>
    
    <update id="selectUpdateOrderPrice">
        update orders set orderPrice=#{orderPrice} where id=#{id}
    </update>

    <select id="selectListOrderByUid" resultType="model.entity.Orders">
        select * from orders where uid=#{uid}
    </select>

    <select id="selectListAllOrder" resultType="model.entity.Orders">
        select * from orders
    </select>

    <select id="selectOrderItemDetail" resultType="model.entity.OrderItemDetail">
    SELECT
orders.orderCode,
orderitem.number,
orderitem.simplePrice,
orderitem.totalPrice,
product.name,
productimage.fileurlpath
FROM
orders ,
orderitem ,
product ,
productimage
WHERE
orders.uid =  #{uid} AND
orders.id =  #{id} AND
orderitem.oid = #{id} AND
orderitem.pid =  product.id AND
product.id =  productimage.pid
GROUP BY
            product.name
    </select>

    <select id="selectOrderOtherDetail" resultType="model.entity.OrderOtherDetail">
        SELECT
            orders.orderCode,
            orders.address,
            orders.receiver,
            orders.mobile,
            orders.userMessage,
            orders.orderPrice,
            orders.createDate
        FROM
            orders ,
            orderitem ,
            product
        WHERE
            orders.uid = #{uid} AND
            orders.id = #{id} AND
            orderitem.pid =  product.id
        GROUP BY
            orders.createDate
    </select>

    <select id="selectOrderByOrderCode" resultType="model.entity.Orders">
        select * from orders where orderCode=#{orderCode}
    </select>

    <update id="selectUpdatePayDate" parameterType="model.entity.Orders">
        update orders set payDate=#{payDate},status=#{status} where orderCode=#{orderCode}
    </update>

    <select id="selectOrderByUIdAndCode" resultType="model.entity.Orders">
        select * from orders where orderCode=#{orderCode}
    </select>

    <update id="selectUpdateOrderStatus">
        update orders set status=#{status},confirmDate=#{confirmDate}
        where orderCode=#{orderCode}
    </update>

    <update id="selectUpdateOrder">
        update orders set status=#{status},deliveryDate=#{deliveryDate},post=#{post}
        where orderCode=#{orderCode}
    </update>

    <select id="selectOrderByStatus" resultType="model.entity.Orders">
        select * from orders where status=#{status}
    </select>

    <delete id="selectDeleteOrderById">
        delete from orders where id=#{id}
    </delete>
    <!--=============================-->
    <delete id="deleteOrderByStatusAndUid" >
        delete from orders where id=#{id} and uid=#{uid}
        <if test="status !=null and status !='' ">
            and status=#{status}
        </if>
    </delete>
    <select id="selectOrderById" resultType="model.entity.Orders">
        select * from orders where id=#{id}
    </select>

    <update id="selectUpdateOrders">
        update orders set status=#{status},deliveryDate=#{deliveryDate},post=#{post},receiver=#{receiver},
        mobile=#{mobile},userMessage=#{userMessage},orderPrice=#{orderPrice}
        where orderCode=#{orderCode}
    </update>

    <select id="findOrderItemDetailById" resultType="model.entity.OrderItemDetail">
    SELECT
orders.orderCode,
orderitem.number,
orderitem.simplePrice,
orderitem.totalPrice,
product.name,
productimage.fileurlpath
FROM
orders ,
orderitem ,
product ,
productimage
WHERE
orders.id =  #{id} AND
orderitem.oid = #{id} AND
orderitem.pid =  product.id AND
product.id =  productimage.pid
GROUP BY product.name
    </select>
</mapper>